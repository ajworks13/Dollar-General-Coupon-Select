
body{
	
	background: radial-gradient(circle, rgba(216,221,222,1) 52%, rgba(255,255,255,1) 99%);
	
	height: 300px;
}

/* solution to disable the user from clicking again just like in the app. Similar methods would be used in productions perhaps. */
.blockFromClickingAgain{
	position:absolute;
	display: none;
	z-index: 2;
	background: transparent;
  opacity: 0.5;
	margin-left: 800px;
	margin-top: -300px;
	height: 500px;
	width: 25%;
}

.box{
	display: flex;
	background: white;
	height: 120px;
	width: 325px;
	margin: 0 auto;
	margin-top: 100px;
	box-shadow: 0px 3px 5px #333;
	border: 1px solid #999;
	border-radius: 5px;
	
}
.plusBtn{
	position:absolute;
	height: 25px;
	width: 25px;
	background: white;
	border: 1px solid black;
	box-shadow: 0px 0px 1px 1px white;
	margin-left: 310px;
	margin-top: 45px;
	text-align: center;
	border-radius: 100%;
}
.plusBtn > p{
	/* Makes the container disappear, making the child elements children of the element the next level up in the DOM */
	display: contents;
	width: 10px;
	height: 5px;
	margin: 0 auto;
	background: white;
	font-size: 20px;
}

.pic{
	background: white;
	width: 30%;
	height: 100%;
	border-top-left-radius: 5px;
	border-bottom-left-radius: 5px;
}
.pic > img{
	height: 100%;
	width: 100%;
}
.description{
	background: white;
	padding: 10px;
	width: 70%;
	height: 100px;
	border-top-right-radius: 5px;
	border-bottom-right-radius: 5px;
	
}
.description > p:nth-child(1){
	background: white;
	font-size: 13px;
	font-weight: bold;
}
.description > p:nth-child(2){
	margin-top: -10px;
	background-color: white;
	font-size: 10px;
	color: gray;
}
.description > a{
	background: white;
}
.coupon{
	display:none;
	background: white;
	width: 100%;
	height: 100%;
	font-size: 30px;
	text-align: center;
}
.coupon > p{
	background: white;
	color:#007FFF;
	
}